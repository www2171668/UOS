
include 'benchmarks/sac.gin'

import alf.utils.dist_utils

# ========= 加载环境 =========
import alf.environments.suite_robotics

max_episode_step=50

create_environment.env_name='FetchReach-v1'
create_environment.num_parallel_environments=20
create_environment.env_load_fn=@suite_robotics.load
suite_robotics.load.max_episode_steps=%max_episode_step

# ========= 网络，预处理器，算法，训练配置 =========
hidden_layers=(256, 256, 256)
AdamTF.lr=1e-3

# =====》actor
actor/ActorDistributionNetwork.fc_layer_params=%hidden_layers
actor/ActorDistributionNetwork.continuous_projection_net_ctor=@NormalProjectionNetwork
NormalProjectionNetwork.state_dependent_std=True
NormalProjectionNetwork.scale_distribution=True
NormalProjectionNetwork.std_transform=@clipped_exp

# =====》critic
critic/CriticNetwork.joint_fc_layer_params=%hidden_layers

# =====》SAC & optimizer
SacAlgorithm.actor_network_cls=@actor/ActorDistributionNetwork
SacAlgorithm.critic_network_cls=@critic/CriticNetwork
SacAlgorithm.actor_optimizer=@AdamTF()
SacAlgorithm.critic_optimizer=@AdamTF()
SacAlgorithm.alpha_optimizer=@AdamTF()

# =====》target
sac/calc_default_target_entropy.min_prob=0.2
SacAlgorithm.target_entropy=@sac/calc_default_target_entropy
SacAlgorithm.target_update_tau=0.05
SacAlgorithm.target_update_period=40
OneStepTDLoss.gamma=0.98

# ========= training config =========
TrainerConfig.initial_collect_steps=10000
TrainerConfig.num_env_steps=3000000
TrainerConfig.num_iterations=0
TrainerConfig.unroll_length=50
TrainerConfig.num_updates_per_train_iter=40
TrainerConfig.mini_batch_length=3
TrainerConfig.mini_batch_size=2048
TrainerConfig.replay_buffer_length=200000

TrainerConfig.evaluate=True
TrainerConfig.eval_interval=50
TrainerConfig.num_eval_episodes=20
TrainerConfig.num_checkpoints=5

TrainerConfig.use_rollout_state=True
